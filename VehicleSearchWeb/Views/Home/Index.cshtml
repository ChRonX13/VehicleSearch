@model VehicleData.VehicleResults
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Vehicle Search";
}

<script src=https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.3/jquery.min.js></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
<script src='https://api.mapbox.com/mapbox.js/v2.4.0/mapbox.js'></script>
<script src='https://api.mapbox.com/mapbox.js/plugins/mapbox-directions.js/v0.4.0/mapbox.directions.js'></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
<link href='https://api.mapbox.com/mapbox.js/v2.4.0/mapbox.css' rel='stylesheet' />
<link href='http://fonts.googleapis.com/css?family=Lato:400,700' rel='stylesheet' type='text/css'>
<link href="https://cdn.jsdelivr.net/animatecss/3.5.1/animate.min.css" rel='stylesheet' />

<style>
    body {
    color:#404040;
    margin:0;
    padding:0;
    -webkit-font-smoothing:antialiased;
  }
  * {
    -webkit-box-sizing:border-box;
    -moz-box-sizing:border-box;
    box-sizing:border-box;
  }
  h1 {
    font-size:22px;
    margin:0;
    font-weight:400;
  }
  a {
    color:#404040;
    text-decoration:none;
  }
  a:hover { color:#101010; }

  .sidebar {
    float: left;
    width:20%;
    height:1024px;
    overflow:hidden;
    border-right:1px solid rgba(0,0,0,0.25);
  }
  .pad2 {
    padding:20px;
  }
  .quiet {
    color:#888;
  }
  .map {
    overflow: auto;
    height: 1024px;
  }
  .heading {
    background:#fff;
    border-bottom:1px solid #eee;
    height:60px;
    line-height:60px;
    padding:0 10px;
  }
  .listings {
    height:100%;
    overflow:auto;
    padding-bottom:60px;
  }
  .listings .item {
    display:block;
    border-bottom:1px solid #eee;
    padding:10px;
    text-decoration:none;
  }
  .listings .item:last-child { border-bottom:none; }
  .listings .item .title {
    display:block;
    color:#184380;
    font-weight:700;
  }
  .listings .item .title small { font-weight:400; }
  .listings .item.active .title,
  .listings .item .title:hover { color:#00AEEF; }
  .listings .item.active {
    background-color:#f8f8f8;
  }

  ::-webkit-scrollbar {
    width:3px;
    height:3px;
    border-left:0;
    background:rgba(0,0,0,0.1);
  }
  ::-webkit-scrollbar-track {
    background:none;
  }
  ::-webkit-scrollbar-thumb {
    background:#00AEEF;
    border-radius:0;
  }

  .clearfix { display:block; }
  .clearfix:after {
    content:'.';
    display:block;
    height:0;
    clear:both;
    visibility:hidden;
  }

  /* Marker tweaks */
  .leaflet-popup-close-button {
    display:none;
  }
  .leaflet-popup-content {
    padding:0;
    width:200px;
  }
  .leaflet-popup-content-wrapper {
    padding:0;
  }
  .leaflet-popup-content h3 {
    background:#00AEEF;
    color:#fff;
    margin:0;
    display:block;
    padding:10px;
    border-radius:3px 3px 0 0;
    font-weight:700;
    margin-top:-15px;
  }
  .leaflet-popup-content div {
    padding:10px;
  }
  .leaflet-container .leaflet-marker-icon { cursor:pointer; }
</style>
<!-- 1ECP337 -->
<div class="container">
    <div class="row">
        @using (Html.BeginForm("Search", "Home", FormMethod.Get))
        {
            <div class="input-group input-group-lg col-md-10 col-md-offset-1">
                @Html.TextBox("SearchString", null, new {@class = "form-control input-lg", placeholder = "Vehicle MDL", autocomplete = "off", autofocus = "true", required = "true" })
                <span class="input-group-btn">
                    <button class="btn btn-danger" type="submit">
                        <span class="glyphicon glyphicon-search"></span>
                    </button>
                </span>
            </div>
        }
    </div>
</div>

<script>
    $(document).ready(function () {
        var model = @Html.Raw(Json.Encode(Model));
        if (!model) {
            $("body").addClass("animated slideInDown");
        } else {
            $('html, body').animate({
                scrollTop: $("#maparea").offset().top
            }, 1000);
        }
    });
</script>

@if (Model != null && Model.Vehicles != null)
{
    <hr/>
    <div id="maparea" class="container-fluid">
        <div class='sidebar'>
            <div class='heading'>
                <h1>@Model.MDL Found</h1>
            </div>
            <div class="muted">
                <small>Found in @Model.TimeTaken ms</small>
            </div>
            <div id='listings' class='listings'></div>
        </div>
        <div id='map' class='map pad2'></div>
        <script>
            L.mapbox.accessToken = 'pk.eyJ1IjoiY2hyb254IiwiYSI6IjQxNTViMDkwMmEyNTQ4NWFhODlkM2U4YzhlNzkwZWI5In0.hLXXvGxlGLPpa4bckwjeNg';
            var map = L.mapbox.map('map', 'mapbox.light')
                .setView([-31.952222, 115.858889], 12);

            var myLayer = L.mapbox.featureLayer().addTo(map);

            // Once we've got a position, zoom and center the map
            // on it, and add a single marker.
            map.on('locationfound', function (e) {
                map.panTo(e.latlng);

                myLayer.setGeoJSON({
                    type: 'Feature',
                    geometry: {
                        type: 'Point',
                        coordinates: [e.latlng.lng, e.latlng.lat]
                    },
                    properties: {
                        'title': 'Here I am!',
                        'marker-color': '#ff8888',
                        'marker-symbol': 'star'
                    }
                });
            });

            map.locate();

            var featureLayer = L.mapbox.featureLayer().addTo(map);
            var features = [];

            @if (Model != null && Model.Vehicles != null)
            {
                foreach (var vehicle in Model.Vehicles)
                {
                    <text>
            features.push({
                // this feature is in the GeoJSON format: see geojson.org
                // for the full specification
                type: 'Feature',

                geometry: {
                    type: 'Point',
                    // coordinates here are in longitude, latitude order because
                    // x, y is the standard for GeoJSON and many formats
                    coordinates: [
                        @vehicle.Longitude,
                        @vehicle.Latitude
                    ]
                },
                properties: {
                    title: '@vehicle.IncidentDateTime',
                    description: '@vehicle.Latitude, @vehicle.Longitude',
                    // one can customize markers by adding simplestyle properties
                    // https://www.mapbox.com/guides/an-open-platform/#simplestyle
                    'marker-size': 'medium',
                    'marker-color': '#3bb2d0',
                    'marker-symbol': 'car'
                }
            });
            </text>
                }
            }

            var listings = document.getElementById('listings');

            featureLayer.setGeoJSON({
                type: 'FeatureCollection',
                features: features
            });


            function setActive(el) {
                var siblings = listings.getElementsByTagName('div');
                for (var i = 0; i < siblings.length; i++) {
                    siblings[i].className = siblings[i].className
                        .replace(/active/, '').replace(/\s\s*$/, '');
                }

                el.className += ' active';
            }

            featureLayer.eachLayer(function (locale) {
                // Shorten locale.feature.properties to just `prop` so we're not
                // writing this long form over and over again.
                var prop = locale.feature.properties;

                // Each marker on the map.
                var popup = '<h3>' + prop.title + '</h3><div>';

                var listing = listings.appendChild(document.createElement('div'));
                listing.className = 'item';

                var link = listing.appendChild(document.createElement('a'));
                link.href = '#';
                link.className = 'title';

                link.innerHTML = prop.title;

                if (prop.description) {
                    popup += '<small class="quiet">' + prop.description + '</small>';
                }

                var details = listing.appendChild(document.createElement('div'));
                details.innerHTML = prop.description;

                link.onclick = function () {
                    setActive(listing);

                    // When a menu item is clicked, animate the map to center
                    // its associated locale and open its popup.
                    map.setView(locale.getLatLng(), 12);
                    locale.openPopup();
                    return false;
                };

                // Marker interaction
                locale.on('click', function () {
                    // 1. center the map on the selected marker.
                    map.panTo(locale.getLatLng());

                    // 2. Set active the markers associated listing.
                    setActive(listing);

                    L.mapbox.directions([
                            { latitude: 33.6, longitude: -95.4431 },
                            { latitude: 33.2, longitude: -95.4431 }
                        ],
                        function (err, res) {
                            // res is a document with directions
                        });
                });

                popup += '</div>';
                locale.bindPopup(popup);
            });


        </script>
    </div>
}